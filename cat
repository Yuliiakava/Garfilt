<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Text Typing with Kittens</title>
    <style>
        body, html {
            height: 100%;
            margin: 0;
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            background: linear-gradient(135deg, darkblue, darkred);
            color: white;
            text-align: center;
            font-size: 24px;
            overflow: hidden;
        }

        #text {
            z-index: 1;
            cursor: pointer;
            white-space: nowrap;
            overflow: hidden;
            border-right: 2px solid white;
            animation: blinkCursor 0.75s step-end infinite;
        }

        .kitten {
            position: absolute;
            width: 100px;
            height: 100px;
        }

        .kitten svg {
            fill: black;
            width: 100%;
            height: 100%;
        }

        .kitten-1 {
            animation: move1 10s infinite linear;
        }

        .kitten-2 {
            animation: move2 12s infinite linear;
        }

        .heart {
            position: absolute;
            font-size: 50px;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            opacity: 0;
            transition: opacity 1s;
        }

        @keyframes blinkCursor {
            from { border-right-color: white; }
            to { border-right-color: transparent; }
        }

        @keyframes typing {
            from { width: 0; }
            to { width: 100%; }
        }

        @keyframes move1 {
            0% { transform: translate(-150px, 0); }
            50% { transform: translate(100vw, 100vh); }
            100% { transform: translate(-150px, 0); }
        }

        @keyframes move2 {
            0% { transform: translate(100vw, -150px); }
            50% { transform: translate(-150px, 100vh); }
            100% { transform: translate(100vw, -150px); }
        }

        @keyframes moveToCenter1 {
            to { transform: translate(50vw, 50vh) translate(-50%, -50%); }
        }

        @keyframes moveToCenter2 {
            to { transform: translate(50vw, 50vh) translate(-50%, -50%); }
        }
    </style>
</head>
<body>
    <div id="text">–ù–∞—Ç–∏—Å–Ω–∏, —â–æ–± –∑–º—ñ–Ω–∏—Ç–∏ —Ç–µ–∫—Å—Ç!</div>

    <div class="kitten kitten-1">
        <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
            <path d="M32 1.5c-8.836 0-16 7.164-16 16 0 2.21.448 4.32 1.254 6.222a8 8 0 1 0 11.884 0A15.954 15.954 0 0 0 32 17.5a15.954 15.954 0 0 0-2.506 6.222 8 8 0 1 0 11.884 0A15.944 15.944 0 0 0 48 17.5c0-8.836-7.164-16-16-16z" />
        </svg>
    </div>

    <div class="kitten kitten-2">
        <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
            <path d="M32 1.5c-8.836 0-16 7.164-16 16 0 2.21.448 4.32 1.254 6.222a8 8 0 1 0 11.884 0A15.954 15.954 0 0 0 32 17.5a15.954 15.954 0 0 0-2.506 6.222 8 8 0 1 0 11.884 0A15.944 15.944 0 0 0 48 17.5c0-8.836-7.164-16-16-16z" />
        </svg>
    </div>

    <div class="heart">ü§ç</div>

    <script>
        const texts = [
            "–•–µ–ª–æ—É –∫–æ—Ç—É—Å–∏–∫üêà‚Äç‚¨õ ...", // Truncated for brevity
            "–°–ø–æ–¥—ñ–≤–∞—é—Å—å —â–æ —Å–∫–æ—Ä–æ –∑–º–æ–∂—É —Å–∫–∞–∑–∞—Ç–∏ —Ç–æ –≤—Å–µ –¥–∏–≤–ª—è—á–∏—Å—å –Ω–∞ —Ç–µ–±–µ) –∞ –ø–æ–∫–∏ –¥–∏–≤–∏—Å—å –Ω–∞ –∫–æ—à–µ–Ω—è—Ç —è–∫—ñ —Ç–∞–∫–∏ –¥—ñ–π—à–ª–∏ —ñ –∑—É–ø–∏–Ω–∏–ª–∏—Å—å –æ–¥–∏–Ω –±—ñ–ª—è –æ–¥–Ω–æ–≥–æ) –û–±–Ω—ñ–º–∞—é,–ª—é–±–ª—é, —Å–∫—É—á–∞—éü§çü§ó"
        ];
        
        let currentIndex = 0;
        const textElement = document.getElementById('text');
        const heartElement = document.querySelector('.heart');
        const kitten1 = document.querySelector('.kitten-1');
        const kitten2 = document.querySelector('.kitten-2');

        function typeText(text, callback) {
            let i = 0;
            textElement.textContent = '';
            textElement.style.animation = 'none';
            const interval = setInterval(() => {
                if (i < text.length) {
                    textElement.textContent += text[i];
                    i++;
                } else {
                    clearInterval(interval);
                    textElement.style.animation = 'blinkCursor 0.75s step-end infinite';
                    if (callback) callback();
                }
            }, 100); // Typing speed
        }

        textElement.addEventListener('click', function() {
            currentIndex = (currentIndex + 1) % texts.length;
            typeText(texts[currentIndex], function() {
                if (currentIndex === texts.length - 1) {
                    kitten1.style.animation = 'moveToCenter1 5s forwards';
                    kitten2.style.animation = 'moveToCenter2 5s forwards';
                    setTimeout(() => {
                        heartElement.style.opacity = 1;
                    }, 5000); // Show heart after kittens meet
                }
            });
        });
    </script>
</body>
</html>
